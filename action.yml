name: 'Setup Python CI'
description: 'Check out repo, install Python, Poetry and project deps'
inputs:
  python-version:
    description: 'Python version to install'
    required: true
  poetry-version:
    description: 'Poetry version to install'
    required: true
  install-dev-deps:
    description: 'Whether to install dev group dependencies or not'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: cache poetry install
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ inputs.poetry-version }}-py${{ inputs.python-version }}-${{ runner.os }}
    - uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - id: cache-deps
      uses: actions/cache@v3
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}-py${{ inputs.python-version }}-${{ runner.os }}
    - run: poetry install --no-interaction --no-root --without=dev
      shell: bash
      if: steps.cache-deps.outputs.cache-hit != 'true'
    - run: poetry install --no-interaction --no-root
      shell: bash
      if: steps.cache-deps.outputs.cache-hit != 'true' && inputs.install-dev-deps == true
    - run: poetry install --no-interaction
      shell: bash

